services:
  shlink:
    image: shlinkio/shlink:3.6-openswoole
    hostname: shlink
    container_name: shlink
    restart: unless-stopped
    ports:
      - 8080:8080
    expose:
      - 80:8080
    environment:
      - DEFAULT_DOMAIN=${SHLINK_DEFAULT_DOMAIN}
      - IS_HTTPS_ENABLED=true
      - GEOLITE_LICENSE_KEY=${GEOLITE_LICENSE_KEY}
      - DB_DRIVER=${SHLINK_DB_DRIVER}
      - DB_NAME=${SHLINK_DB_NAME}
      - DB_USER=${SHLINK_DB_USER}
      - DB_PASSWORD=${SHLINK_DB_PASSWORD}
      - DB_HOST=shlink-db
      - DB_PORT=${SHLINK_DB_PORT}
    depends_on:
      - shlink-db
    platform: linux/amd64

  # Use https://app.shlink.io/ for web client
  shlink-web-client:
    image: shlinkio/shlink-web-client:3.10.2
    hostname: shlink-web-client
    container_name: shlink-web-client
    restart: unless-stopped
    ports:
      - 8081:80
    expose:
      - 80:80
    volumes:
      - ./shlink/servers.json:/usr/share/nginx/html/servers.json
    depends_on:
      - shlink
    platform: linux/amd64

  shlink-db:
    image: mariadb:10.9.8
    hostname: shlink-db
    container_name: shlink-db
    restart: unless-stopped
    ports:
      - ${SHLINK_DB_PORT}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${SHLINK_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${SHLINK_DB_NAME}
      - MYSQL_USER=${SHLINK_DB_USER}
      - MYSQL_PASSWORD=${SHLINK_DB_PASSWORD}
    volumes:
      - ./shlink/database/data:/var/lib/mysql
      - ./shlink/database/backup:/var/backup
    platform: linux/amd64

  qrcode-generator:
    image: bizzycolah/qrcode-generator:latest
    hostname: qrcode-generator
    container_name: qrcode-generator
    restart: unless-stopped
    ports:
      - 8082:80
    expose:
      - 80:80
    platform: linux/amd64

  # yourls:
  #   image: yourls:1.9.2-apache
  #   hostname: yourls
  #   container_name: yourls
  #   restart: unless-stopped
  #   ports:
  #     - 8080:80
  #   expose:
  #     - 80:80
  #   environment:
  #     - YOURLS_DB_USER=yourls
  #     - YOURLS_DB_PASS=yourls
  #     - YOURLS_DB_NAME=yourls
  #     - YOURLS_DB_HOST=yourls-db
  #     - YOURLS_SITE=https://links.crazyfirelee.tw
  #     - YOURLS_USER=admin
  #     - YOURLS_PASS=admin
  #   depends_on:
  #     - yourls-db
  #   platform: linux/amd64

  # yourls-db:
  #   image: mariadb:10.9.8
  #   hostname: yourls-db
  #   container_name: yourls-db
  #   restart: unless-stopped
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=yourls
  #     - MYSQL_DATABASE=yourls
  #     - MYSQL_USER=yourls
  #     - MYSQL_PASSWORD=yourls
  #   volumes:
  #     - ./yourls-db/data:/var/lib/mysql
  #     - ./yourls-db/backup:/var/backup
  #   platform: linux/amd64

  # nginx:
  #   image: nginx:1.25.2-alpine
  #   hostname: nginx-proxy
  #   container_name: nginx-proxy
  #   restart: on-failure
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - /etc/letsencrypt:/etc/letsencrypt
  #     - ./certbot:/var/www/certbot
  #   depends_on:
  #     - yourls
  #     - qrcode-generator
  #   platform: linux/amd64

  # certbot:
  #   image: certbot/certbot:latest
  #   hostname: certbot
  #   container_name: certbot
  #   restart: on-failure
  #   volumes:
  #     - /etc/letsencrypt:/etc/letsencrypt
  #     - /var/lib/letsencrypt:/var/lib/letsencrypt
  #     - ./certbot:/var/www/certbot
  #   command: sh -c "certonly --webroot --webroot-path=/var/www/certbot --email test@crazyfirelee.tw -d links.crazyfirelee.tw --agree-tos --no-eff-email ; certonly --webroot --webroot-path=/var/www/certbot --email test@crazyfirelee.tw -d qrcode.crazyfirelee.tw --agree-tos --no-eff-email"
  #   depends_on:
  #     - nginx
